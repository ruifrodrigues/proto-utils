// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: interval/v1/interval.proto

package intervalv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Interval int32

const (
	Interval_INTERVAL_UNSPECIFIED Interval = 0
	Interval_INTERVAL_YEAR        Interval = 1
	Interval_INTERVAL_HALF_YEAR   Interval = 2
	Interval_INTERVAL_QUARTER     Interval = 3
	Interval_INTERVAL_MONTH       Interval = 4
)

// Enum value maps for Interval.
var (
	Interval_name = map[int32]string{
		0: "INTERVAL_UNSPECIFIED",
		1: "INTERVAL_YEAR",
		2: "INTERVAL_HALF_YEAR",
		3: "INTERVAL_QUARTER",
		4: "INTERVAL_MONTH",
	}
	Interval_value = map[string]int32{
		"INTERVAL_UNSPECIFIED": 0,
		"INTERVAL_YEAR":        1,
		"INTERVAL_HALF_YEAR":   2,
		"INTERVAL_QUARTER":     3,
		"INTERVAL_MONTH":       4,
	}
)

func (x Interval) Enum() *Interval {
	p := new(Interval)
	*p = x
	return p
}

func (x Interval) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Interval) Descriptor() protoreflect.EnumDescriptor {
	return file_interval_v1_interval_proto_enumTypes[0].Descriptor()
}

func (Interval) Type() protoreflect.EnumType {
	return &file_interval_v1_interval_proto_enumTypes[0]
}

func (x Interval) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Interval.Descriptor instead.
func (Interval) EnumDescriptor() ([]byte, []int) {
	return file_interval_v1_interval_proto_rawDescGZIP(), []int{0}
}

var File_interval_v1_interval_proto protoreflect.FileDescriptor

var file_interval_v1_interval_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2a, 0x79, 0x0a, 0x08, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x18, 0x0a, 0x14, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x56, 0x41,
	0x4c, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x11, 0x0a, 0x0d, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x56, 0x41, 0x4c, 0x5f, 0x59, 0x45, 0x41, 0x52,
	0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x56, 0x41, 0x4c, 0x5f, 0x48,
	0x41, 0x4c, 0x46, 0x5f, 0x59, 0x45, 0x41, 0x52, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x49, 0x4e,
	0x54, 0x45, 0x52, 0x56, 0x41, 0x4c, 0x5f, 0x51, 0x55, 0x41, 0x52, 0x54, 0x45, 0x52, 0x10, 0x03,
	0x12, 0x12, 0x0a, 0x0e, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x56, 0x41, 0x4c, 0x5f, 0x4d, 0x4f, 0x4e,
	0x54, 0x48, 0x10, 0x04, 0x42, 0xb7, 0x01, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x2e, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x42, 0x0d, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76,
	0x61, 0x6c, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x48, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x72, 0x75, 0x69, 0x66, 0x72, 0x6f, 0x64, 0x72, 0x69, 0x67,
	0x75, 0x65, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x75, 0x74, 0x69, 0x6c, 0x73, 0x2f,
	0x67, 0x65, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x2f, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x61, 0x6c, 0x2f, 0x76, 0x31, 0x3b, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61,
	0x6c, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x49, 0x58, 0x58, 0xaa, 0x02, 0x0b, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x76, 0x61, 0x6c, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x0b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76,
	0x61, 0x6c, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x17, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c,
	0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea,
	0x02, 0x0c, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_interval_v1_interval_proto_rawDescOnce sync.Once
	file_interval_v1_interval_proto_rawDescData = file_interval_v1_interval_proto_rawDesc
)

func file_interval_v1_interval_proto_rawDescGZIP() []byte {
	file_interval_v1_interval_proto_rawDescOnce.Do(func() {
		file_interval_v1_interval_proto_rawDescData = protoimpl.X.CompressGZIP(file_interval_v1_interval_proto_rawDescData)
	})
	return file_interval_v1_interval_proto_rawDescData
}

var file_interval_v1_interval_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_interval_v1_interval_proto_goTypes = []interface{}{
	(Interval)(0), // 0: interval.v1.Interval
}
var file_interval_v1_interval_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_interval_v1_interval_proto_init() }
func file_interval_v1_interval_proto_init() {
	if File_interval_v1_interval_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_interval_v1_interval_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_interval_v1_interval_proto_goTypes,
		DependencyIndexes: file_interval_v1_interval_proto_depIdxs,
		EnumInfos:         file_interval_v1_interval_proto_enumTypes,
	}.Build()
	File_interval_v1_interval_proto = out.File
	file_interval_v1_interval_proto_rawDesc = nil
	file_interval_v1_interval_proto_goTypes = nil
	file_interval_v1_interval_proto_depIdxs = nil
}
